version: 2
executorType: docker
containerInfo:
  - image: node:6.9.4
  - image: rethinkdb:2.3.5
stages:
  build:
    workDir: /home/ubuntu/action
    environment:
      - DEVOPS_REPO: "git@github.com:ParabolInc/action-devops.git"
      - DEVOPS_WORKDIR: "/home/ubuntu/action-devops"
      - GITHUB_REMOTE_PRODUCTION: "dokku@action-production.parabol.co:web"
      - GITHUB_REMOTE_STAGING: "dokku@action-staging.parabol.co:web"

    steps:
      - type: add-ssh-keys
        fingerprints:
          - "53:a8:37:35:c3:7e:54:f5:19:f6:8e:a1:e0:78:52:da"

      - type: checkout

      - type: shell
        name: Switch to Github user key
        command: |
          cp -f $(ls -1 ~/.ssh/id_rsa_* | head -n 1) ~/.ssh/id_rsa &&
          rm -f ~/.ssh/*.pub

      - type: cache-restore
        key: action-{{ checksum "yarn.lock" }}

      - type: shell
        name: Install dependencies
        command: |
          apt-get update &&
          apt-get -yq install build-essential g++ &&
          npm i -g yarn &&
          yarn

      - type: cache-save
        key: action-{{ checksum "yarn.lock" }}
        paths:
          - /home/ubuntu/action/node_modules

      - type: shell
        name: Database migration
        command: npm run db:migrate

      - type: shell
        name: NPM lint
        command: npm run lint

      - type: shell
        name: NPM run test
        command: npm test

      - type: shell
        name: Pre-build DevOps checkout
        command: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            export DEPLOY_ENV="production";
          elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
            export DEPLOY_ENV="staging";
          else
            export DEPLOY_ENV="development";
          fi;
          git clone $DEVOPS_REPO $DEVOPS_WORKDIR &&
          cp $DEVOPS_WORKDIR/environments/$DEPLOY_ENV ./.env

      - type: shell
        name: Build server
        command: npm run build:server

      - type: shell
        name: Build client
        command: npm run build:client

      - type: deploy
        name: Possible deployment
        command: |
          if [ "${CIRCLE_BRANCH}" == "master" ]; then
            export GITHUB_REMOTE="${GITHUB_REMOTE_PRODUCTION}";
          elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
            export GITHUB_REMOTE="${GITHUB_REMOTE_STAGING}";
          fi;
          if [ -n "${GITHUB_REMOTE}" ]; then
            rm -f build/* &&
            npm run build:server && npm run build:client-min &&
            git remote add dokku $GITHUB_REMOTE &&
            git push dokku $CIRCLE_BRANCH:master
          fi

      - type: artifacts-store
        path: /home/ubuntu/action/build
        destination: build
